/* mySoap.h
   Generated by wsdl2h 2.8.59 from http://192.168.188.242:8080/fYService?wsdl and typemap.dat
   2019-06-12 00:07:39 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on mySoap.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c++,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://webservice.fy.ggzn.org/                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * $CONTAINER                                                                 *
 *   std::vector                                                              *
 *                                                                            *
\******************************************************************************/

#include <vector>
template <class T> class std::vector;

/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

web = "http://webservice.fy.ggzn.org/"

*/

#define SOAP_NAMESPACE_OF_web	"http://webservice.fy.ggzn.org/"
//gsoap web   schema namespace:	http://webservice.fy.ggzn.org/
//gsoap web   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


//  Forward declaration of class web__saveGPOrders.
class web__saveGPOrders;

//  Forward declaration of class web__gpOrders.
class web__gpOrders;

//  Forward declaration of class web__saveGPOrdersResponse.
class web__saveGPOrdersResponse;

//  Forward declaration of class web__saveSamplers.
class web__saveSamplers;

//  Forward declaration of class web__saveSamplersResponse.
class web__saveSamplersResponse;

//  Forward declaration of class web__savePoundInfoA.
class web__savePoundInfoA;

//  Forward declaration of class web__savePoundInfoAResponse.
class web__savePoundInfoAResponse;

//  Forward declaration of class web__saveCheckingInfo.
class web__saveCheckingInfo;

//  Forward declaration of class web__checkingInfo.
class web__checkingInfo;

//  Forward declaration of class web__saveCheckingInfoResponse.
class web__saveCheckingInfoResponse;

//  Forward declaration of class web__saveGrainUser.
class web__saveGrainUser;

//  Forward declaration of class web__saveGrainUserResponse.
class web__saveGrainUserResponse;

//  Forward declaration of class web__savePoundInfo.
class web__savePoundInfo;

//  Forward declaration of class web__poundInfo.
class web__poundInfo;

//  Forward declaration of class web__savePoundInfoResponse.
class web__savePoundInfoResponse;

//  Forward declaration of class web__saveVehicleInfo.
class web__saveVehicleInfo;

//  Forward declaration of class web__saveVehicleInfoResponse.
class web__saveVehicleInfoResponse;

//  Forward declaration of class web__login.
class web__login;

//  Forward declaration of class web__loginResponse.
class web__loginResponse;

//  Forward declaration of class web__user.
class web__user;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://webservice.fy.ggzn.org/                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://webservice.fy.ggzn.org/                                           *
 *                                                                            *
\******************************************************************************/

/// @brief "http://webservice.fy.ggzn.org/":saveGPOrders is a complexType.
///
/// class web__saveGPOrders operations:
/// - web__saveGPOrders* soap_new_web__saveGPOrders(soap*) allocate and default initialize
/// - web__saveGPOrders* soap_new_web__saveGPOrders(soap*, int num) allocate array and default initialize values
/// - web__saveGPOrders* soap_new_req_web__saveGPOrders(soap*, ...) allocate, set required members
/// - web__saveGPOrders* soap_new_set_web__saveGPOrders(soap*, ...) allocate, set all public members
/// - web__saveGPOrders::soap_default(soap*) default initialize members
/// - int soap_read_web__saveGPOrders(soap*, web__saveGPOrders*) deserialize from a stream
/// - int soap_write_web__saveGPOrders(soap*, web__saveGPOrders*) serialize to a stream
/// - web__saveGPOrders* web__saveGPOrders::soap_dup(soap*) returns deep copy of web__saveGPOrders, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__saveGPOrders::soap_del() deep deletes web__saveGPOrders data members, use only after web__saveGPOrders::soap_dup(NULL) (use soapcpp2 -Ed)
class web__saveGPOrders
{ public:
/// Element "arg0" of XSD type "http://webservice.fy.ggzn.org/":gpOrders.
    web__gpOrders*                       arg0                           0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":gpOrders is a complexType.
///
/// class web__gpOrders operations:
/// - web__gpOrders* soap_new_web__gpOrders(soap*) allocate and default initialize
/// - web__gpOrders* soap_new_web__gpOrders(soap*, int num) allocate array and default initialize values
/// - web__gpOrders* soap_new_req_web__gpOrders(soap*, ...) allocate, set required members
/// - web__gpOrders* soap_new_set_web__gpOrders(soap*, ...) allocate, set all public members
/// - web__gpOrders::soap_default(soap*) default initialize members
/// - int soap_read_web__gpOrders(soap*, web__gpOrders*) deserialize from a stream
/// - int soap_write_web__gpOrders(soap*, web__gpOrders*) serialize to a stream
/// - web__gpOrders* web__gpOrders::soap_dup(soap*) returns deep copy of web__gpOrders, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__gpOrders::soap_del() deep deletes web__gpOrders data members, use only after web__gpOrders::soap_dup(NULL) (use soapcpp2 -Ed)
class web__gpOrders
{ public:
/// Element "ad_client_id" of XSD type xs:int.
    int                                  ad_USCOREclient_USCOREid       1;	///< Required element.
/// Element "ad_org_id" of XSD type xs:int.
    int                                  ad_USCOREorg_USCOREid          1;	///< Required element.
/// Element "ad_role_id" of XSD type xs:int.
    int                                  ad_USCORErole_USCOREid         1;	///< Required element.
/// Element "ad_user_id" of XSD type xs:int.
    int                                  ad_USCOREuser_USCOREid         1;	///< Required element.
/// Element "address1" of XSD type xs:string.
    std::string*                         address1                       0;	///< Optional element.
/// Element "c_contract_id" of XSD type xs:int.
    int                                  c_USCOREcontract_USCOREid      1;	///< Required element.
/// Element "c_doctype_id" of XSD type xs:int.
    int                                  c_USCOREdoctype_USCOREid       1;	///< Required element.
/// Element "c_doctypetarget_id" of XSD type xs:int.
    int                                  c_USCOREdoctypetarget_USCOREid 1;	///< Required element.
/// Element "c_gporders_id" of XSD type xs:int.
    int                                  c_USCOREgporders_USCOREid      1;	///< Required element.
/// Element "c_grainuser_id" of XSD type xs:int.
    int                                  c_USCOREgrainuser_USCOREid     1;	///< Required element.
/// Element "c_location_id" of XSD type xs:int.
    int                                  c_USCORElocation_USCOREid      1;	///< Required element.
/// Element "c_targetvehicle_id" of XSD type xs:int.
    int                                  c_USCOREtargetvehicle_USCOREid 1;	///< Required element.
/// Element "c_vehicleinfo_id" of XSD type xs:int.
    int                                  c_USCOREvehicleinfo_USCOREid   1;	///< Required element.
/// Element "c_vendor_id" of XSD type xs:int.
    int                                  c_USCOREvendor_USCOREid        1;	///< Required element.
/// Element "color" of XSD type xs:string.
    std::string*                         color                          0;	///< Optional element.
/// Element "currentelectricity" of XSD type xs:int.
    int                                  currentelectricity             1;	///< Required element.
/// Element "docaction" of XSD type xs:string.
    std::string*                         docaction                      0;	///< Optional element.
/// Element "docstatus" of XSD type xs:string.
    std::string*                         docstatus                      0;	///< Optional element.
/// Element "documentno" of XSD type xs:string.
    std::string*                         documentno                     0;	///< Optional element.
/// Element "idcard" of XSD type xs:string.
    std::string*                         idcard                         0;	///< Optional element.
/// Element "idcardbutton" of XSD type xs:string.
    std::string*                         idcardbutton                   0;	///< Optional element.
/// Element "isapproved" of XSD type xs:boolean.
    bool                                 isapproved                     1;	///< Required element.
/// Element "isvendor" of XSD type xs:boolean.
    bool                                 isvendor                       1;	///< Required element.
/// Element "license" of XSD type xs:string.
    std::string*                         license                        0;	///< Optional element.
/// Element "packingtype" of XSD type xs:string.
    std::string*                         packingtype                    0;	///< Optional element.
/// Element "processed" of XSD type xs:boolean.
    bool                                 processed                      1;	///< Required element.
/// Element "processing" of XSD type xs:boolean.
    bool                                 processing                     1;	///< Required element.
/// Element "recheckbutton" of XSD type xs:string.
    std::string*                         recheckbutton                  0;	///< Optional element.
/// Element "settlementcardbutton" of XSD type xs:string.
    std::string*                         settlementcardbutton           0;	///< Optional element.
/// Element "settlementcardid" of XSD type xs:string.
    std::string*                         settlementcardid               0;	///< Optional element.
/// Element "tagbutton" of XSD type xs:string.
    std::string*                         tagbutton                      0;	///< Optional element.
/// Element "tid" of XSD type xs:string.
    std::string*                         tid                            0;	///< Optional element.
/// Element "type" of XSD type xs:string.
    std::string*                         type                           0;	///< Optional element.
/// Element "vehiclebutton" of XSD type xs:string.
    std::string*                         vehiclebutton                  0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":saveGPOrdersResponse is a complexType.
///
/// class web__saveGPOrdersResponse operations:
/// - web__saveGPOrdersResponse* soap_new_web__saveGPOrdersResponse(soap*) allocate and default initialize
/// - web__saveGPOrdersResponse* soap_new_web__saveGPOrdersResponse(soap*, int num) allocate array and default initialize values
/// - web__saveGPOrdersResponse* soap_new_req_web__saveGPOrdersResponse(soap*, ...) allocate, set required members
/// - web__saveGPOrdersResponse* soap_new_set_web__saveGPOrdersResponse(soap*, ...) allocate, set all public members
/// - web__saveGPOrdersResponse::soap_default(soap*) default initialize members
/// - int soap_read_web__saveGPOrdersResponse(soap*, web__saveGPOrdersResponse*) deserialize from a stream
/// - int soap_write_web__saveGPOrdersResponse(soap*, web__saveGPOrdersResponse*) serialize to a stream
/// - web__saveGPOrdersResponse* web__saveGPOrdersResponse::soap_dup(soap*) returns deep copy of web__saveGPOrdersResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__saveGPOrdersResponse::soap_del() deep deletes web__saveGPOrdersResponse data members, use only after web__saveGPOrdersResponse::soap_dup(NULL) (use soapcpp2 -Ed)
class web__saveGPOrdersResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::string*                         return_                        0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":saveSamplers is a complexType.
///
/// class web__saveSamplers operations:
/// - web__saveSamplers* soap_new_web__saveSamplers(soap*) allocate and default initialize
/// - web__saveSamplers* soap_new_web__saveSamplers(soap*, int num) allocate array and default initialize values
/// - web__saveSamplers* soap_new_req_web__saveSamplers(soap*, ...) allocate, set required members
/// - web__saveSamplers* soap_new_set_web__saveSamplers(soap*, ...) allocate, set all public members
/// - web__saveSamplers::soap_default(soap*) default initialize members
/// - int soap_read_web__saveSamplers(soap*, web__saveSamplers*) deserialize from a stream
/// - int soap_write_web__saveSamplers(soap*, web__saveSamplers*) serialize to a stream
/// - web__saveSamplers* web__saveSamplers::soap_dup(soap*) returns deep copy of web__saveSamplers, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__saveSamplers::soap_del() deep deletes web__saveSamplers data members, use only after web__saveSamplers::soap_dup(NULL) (use soapcpp2 -Ed)
class web__saveSamplers
{ public:
/// Element "arg0" of XSD type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element "arg1" of XSD type xs:string.
    std::string*                         arg1                           0;	///< Optional element.
/// Element "arg2" of XSD type xs:string.
    std::string*                         arg2                           0;	///< Optional element.
/// Element "arg3" of XSD type xs:string.
    std::string*                         arg3                           0;	///< Optional element.
/// Element "arg4" of XSD type xs:string.
    std::string*                         arg4                           0;	///< Optional element.
/// Element "arg5" of XSD type xs:string.
    std::string*                         arg5                           0;	///< Optional element.
/// Element "arg6" of XSD type xs:string.
    std::string*                         arg6                           0;	///< Optional element.
/// Element "arg7" of XSD type xs:string.
    std::string*                         arg7                           0;	///< Optional element.
/// Element "arg8" of XSD type xs:string.
    std::string*                         arg8                           0;	///< Optional element.
/// Element "arg9" of XSD type xs:string.
    std::string*                         arg9                           0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":saveSamplersResponse is a complexType.
///
/// class web__saveSamplersResponse operations:
/// - web__saveSamplersResponse* soap_new_web__saveSamplersResponse(soap*) allocate and default initialize
/// - web__saveSamplersResponse* soap_new_web__saveSamplersResponse(soap*, int num) allocate array and default initialize values
/// - web__saveSamplersResponse* soap_new_req_web__saveSamplersResponse(soap*, ...) allocate, set required members
/// - web__saveSamplersResponse* soap_new_set_web__saveSamplersResponse(soap*, ...) allocate, set all public members
/// - web__saveSamplersResponse::soap_default(soap*) default initialize members
/// - int soap_read_web__saveSamplersResponse(soap*, web__saveSamplersResponse*) deserialize from a stream
/// - int soap_write_web__saveSamplersResponse(soap*, web__saveSamplersResponse*) serialize to a stream
/// - web__saveSamplersResponse* web__saveSamplersResponse::soap_dup(soap*) returns deep copy of web__saveSamplersResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__saveSamplersResponse::soap_del() deep deletes web__saveSamplersResponse data members, use only after web__saveSamplersResponse::soap_dup(NULL) (use soapcpp2 -Ed)
class web__saveSamplersResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::string*                         return_                        0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":savePoundInfoA is a complexType.
///
/// class web__savePoundInfoA operations:
/// - web__savePoundInfoA* soap_new_web__savePoundInfoA(soap*) allocate and default initialize
/// - web__savePoundInfoA* soap_new_web__savePoundInfoA(soap*, int num) allocate array and default initialize values
/// - web__savePoundInfoA* soap_new_req_web__savePoundInfoA(soap*, ...) allocate, set required members
/// - web__savePoundInfoA* soap_new_set_web__savePoundInfoA(soap*, ...) allocate, set all public members
/// - web__savePoundInfoA::soap_default(soap*) default initialize members
/// - int soap_read_web__savePoundInfoA(soap*, web__savePoundInfoA*) deserialize from a stream
/// - int soap_write_web__savePoundInfoA(soap*, web__savePoundInfoA*) serialize to a stream
/// - web__savePoundInfoA* web__savePoundInfoA::soap_dup(soap*) returns deep copy of web__savePoundInfoA, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__savePoundInfoA::soap_del() deep deletes web__savePoundInfoA data members, use only after web__savePoundInfoA::soap_dup(NULL) (use soapcpp2 -Ed)
class web__savePoundInfoA
{ public:
/// Element "arg0" of XSD type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element "arg1" of XSD type xs:string.
    std::string*                         arg1                           0;	///< Optional element.
/// Element "arg2" of XSD type xs:string.
    std::string*                         arg2                           0;	///< Optional element.
/// Element "arg3" of XSD type xs:string.
    std::string*                         arg3                           0;	///< Optional element.
/// Element "arg4" of XSD type xs:string.
    std::string*                         arg4                           0;	///< Optional element.
/// Element "arg5" of XSD type xs:string.
    std::string*                         arg5                           0;	///< Optional element.
/// Element "arg6" of XSD type xs:string.
    std::string*                         arg6                           0;	///< Optional element.
/// Element "arg7" of XSD type xs:string.
    std::string*                         arg7                           0;	///< Optional element.
/// Element "arg8" of XSD type xs:string.
    std::string*                         arg8                           0;	///< Optional element.
/// Element "arg9" of XSD type xs:string.
    std::string*                         arg9                           0;	///< Optional element.
/// Element "arg10" of XSD type xs:string.
    std::string*                         arg10                          0;	///< Optional element.
/// Element "arg11" of XSD type xs:string.
    std::string*                         arg11                          0;	///< Optional element.
/// Element "arg12" of XSD type xs:string.
    std::string*                         arg12                          0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":savePoundInfoAResponse is a complexType.
///
/// class web__savePoundInfoAResponse operations:
/// - web__savePoundInfoAResponse* soap_new_web__savePoundInfoAResponse(soap*) allocate and default initialize
/// - web__savePoundInfoAResponse* soap_new_web__savePoundInfoAResponse(soap*, int num) allocate array and default initialize values
/// - web__savePoundInfoAResponse* soap_new_req_web__savePoundInfoAResponse(soap*, ...) allocate, set required members
/// - web__savePoundInfoAResponse* soap_new_set_web__savePoundInfoAResponse(soap*, ...) allocate, set all public members
/// - web__savePoundInfoAResponse::soap_default(soap*) default initialize members
/// - int soap_read_web__savePoundInfoAResponse(soap*, web__savePoundInfoAResponse*) deserialize from a stream
/// - int soap_write_web__savePoundInfoAResponse(soap*, web__savePoundInfoAResponse*) serialize to a stream
/// - web__savePoundInfoAResponse* web__savePoundInfoAResponse::soap_dup(soap*) returns deep copy of web__savePoundInfoAResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__savePoundInfoAResponse::soap_del() deep deletes web__savePoundInfoAResponse data members, use only after web__savePoundInfoAResponse::soap_dup(NULL) (use soapcpp2 -Ed)
class web__savePoundInfoAResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::string*                         return_                        0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":saveCheckingInfo is a complexType.
///
/// class web__saveCheckingInfo operations:
/// - web__saveCheckingInfo* soap_new_web__saveCheckingInfo(soap*) allocate and default initialize
/// - web__saveCheckingInfo* soap_new_web__saveCheckingInfo(soap*, int num) allocate array and default initialize values
/// - web__saveCheckingInfo* soap_new_req_web__saveCheckingInfo(soap*, ...) allocate, set required members
/// - web__saveCheckingInfo* soap_new_set_web__saveCheckingInfo(soap*, ...) allocate, set all public members
/// - web__saveCheckingInfo::soap_default(soap*) default initialize members
/// - int soap_read_web__saveCheckingInfo(soap*, web__saveCheckingInfo*) deserialize from a stream
/// - int soap_write_web__saveCheckingInfo(soap*, web__saveCheckingInfo*) serialize to a stream
/// - web__saveCheckingInfo* web__saveCheckingInfo::soap_dup(soap*) returns deep copy of web__saveCheckingInfo, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__saveCheckingInfo::soap_del() deep deletes web__saveCheckingInfo data members, use only after web__saveCheckingInfo::soap_dup(NULL) (use soapcpp2 -Ed)
class web__saveCheckingInfo
{ public:
/// Element "arg0" of XSD type "http://webservice.fy.ggzn.org/":checkingInfo.
    web__checkingInfo*                   arg0                           0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":checkingInfo is a complexType.
///
/// class web__checkingInfo operations:
/// - web__checkingInfo* soap_new_web__checkingInfo(soap*) allocate and default initialize
/// - web__checkingInfo* soap_new_web__checkingInfo(soap*, int num) allocate array and default initialize values
/// - web__checkingInfo* soap_new_req_web__checkingInfo(soap*, ...) allocate, set required members
/// - web__checkingInfo* soap_new_set_web__checkingInfo(soap*, ...) allocate, set all public members
/// - web__checkingInfo::soap_default(soap*) default initialize members
/// - int soap_read_web__checkingInfo(soap*, web__checkingInfo*) deserialize from a stream
/// - int soap_write_web__checkingInfo(soap*, web__checkingInfo*) serialize to a stream
/// - web__checkingInfo* web__checkingInfo::soap_dup(soap*) returns deep copy of web__checkingInfo, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__checkingInfo::soap_del() deep deletes web__checkingInfo data members, use only after web__checkingInfo::soap_dup(NULL) (use soapcpp2 -Ed)
class web__checkingInfo
{ public:
/// Element "abreastimpurity" of XSD type xs:int.
    int                                  abreastimpurity                1;	///< Required element.
/// Element "ad_client_id" of XSD type xs:int.
    int                                  ad_USCOREclient_USCOREid       1;	///< Required element.
/// Element "ad_org_id" of XSD type xs:int.
    int                                  ad_USCOREorg_USCOREid          1;	///< Required element.
/// Element "ad_role_id" of XSD type xs:int.
    int                                  ad_USCORErole_USCOREid         1;	///< Required element.
/// Element "ad_user_id" of XSD type xs:int.
    int                                  ad_USCOREuser_USCOREid         1;	///< Required element.
/// Element "barcodevalue" of XSD type xs:string.
    std::string*                         barcodevalue                   0;	///< Optional element.
/// Element "bulkdensity" of XSD type xs:int.
    int                                  bulkdensity                    1;	///< Required element.
/// Element "c_checkinginfo_id" of XSD type xs:int.
    int                                  c_USCOREcheckinginfo_USCOREid  1;	///< Required element.
/// Element "c_gporders_id" of XSD type xs:int.
    int                                  c_USCOREgporders_USCOREid      1;	///< Required element.
/// Element "c_vehicleinfo_id" of XSD type xs:int.
    int                                  c_USCOREvehicleinfo_USCOREid   1;	///< Required element.
/// Element "comments" of XSD type xs:string.
    std::string*                         comments                       0;	///< Optional element.
/// Element "datecheck" of XSD type xs:string.
    std::string*                         datecheck                      0;	///< Optional element.
/// Element "fracture" of XSD type xs:int.
    int                                  fracture                       1;	///< Required element.
/// Element "heatloss" of XSD type xs:int.
    int                                  heatloss                       1;	///< Required element.
/// Element "impurity" of XSD type xs:int.
    int                                  impurity                       1;	///< Required element.
/// Element "iscomplete" of XSD type xs:string.
    std::string*                         iscomplete                     0;	///< Optional element.
/// Element "issample" of XSD type xs:boolean.
    bool                                 issample                       1;	///< Required element.
/// Element "m_product_id" of XSD type xs:int.
    int                                  m_USCOREproduct_USCOREid       1;	///< Required element.
/// Element "mildew" of XSD type xs:int.
    int                                  mildew                         1;	///< Required element.
/// Element "pipe" of XSD type xs:int.
    int                                  pipe                           1;	///< Required element.
/// Element "sampleno" of XSD type xs:string.
    std::string*                         sampleno                       0;	///< Optional element.
/// Element "settlementcardid" of XSD type xs:string.
    std::string*                         settlementcardid               0;	///< Optional element.
/// Element "temperature" of XSD type xs:string.
    std::string*                         temperature                    0;	///< Optional element.
/// Element "watercontent" of XSD type xs:int.
    int                                  watercontent                   1;	///< Required element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":saveCheckingInfoResponse is a complexType.
///
/// class web__saveCheckingInfoResponse operations:
/// - web__saveCheckingInfoResponse* soap_new_web__saveCheckingInfoResponse(soap*) allocate and default initialize
/// - web__saveCheckingInfoResponse* soap_new_web__saveCheckingInfoResponse(soap*, int num) allocate array and default initialize values
/// - web__saveCheckingInfoResponse* soap_new_req_web__saveCheckingInfoResponse(soap*, ...) allocate, set required members
/// - web__saveCheckingInfoResponse* soap_new_set_web__saveCheckingInfoResponse(soap*, ...) allocate, set all public members
/// - web__saveCheckingInfoResponse::soap_default(soap*) default initialize members
/// - int soap_read_web__saveCheckingInfoResponse(soap*, web__saveCheckingInfoResponse*) deserialize from a stream
/// - int soap_write_web__saveCheckingInfoResponse(soap*, web__saveCheckingInfoResponse*) serialize to a stream
/// - web__saveCheckingInfoResponse* web__saveCheckingInfoResponse::soap_dup(soap*) returns deep copy of web__saveCheckingInfoResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__saveCheckingInfoResponse::soap_del() deep deletes web__saveCheckingInfoResponse data members, use only after web__saveCheckingInfoResponse::soap_dup(NULL) (use soapcpp2 -Ed)
class web__saveCheckingInfoResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::string*                         return_                        0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":saveGrainUser is a complexType.
///
/// class web__saveGrainUser operations:
/// - web__saveGrainUser* soap_new_web__saveGrainUser(soap*) allocate and default initialize
/// - web__saveGrainUser* soap_new_web__saveGrainUser(soap*, int num) allocate array and default initialize values
/// - web__saveGrainUser* soap_new_req_web__saveGrainUser(soap*, ...) allocate, set required members
/// - web__saveGrainUser* soap_new_set_web__saveGrainUser(soap*, ...) allocate, set all public members
/// - web__saveGrainUser::soap_default(soap*) default initialize members
/// - int soap_read_web__saveGrainUser(soap*, web__saveGrainUser*) deserialize from a stream
/// - int soap_write_web__saveGrainUser(soap*, web__saveGrainUser*) serialize to a stream
/// - web__saveGrainUser* web__saveGrainUser::soap_dup(soap*) returns deep copy of web__saveGrainUser, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__saveGrainUser::soap_del() deep deletes web__saveGrainUser data members, use only after web__saveGrainUser::soap_dup(NULL) (use soapcpp2 -Ed)
class web__saveGrainUser
{ public:
/// Element "arg0" of XSD type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element "arg1" of XSD type xs:string.
    std::string*                         arg1                           0;	///< Optional element.
/// Element "arg2" of XSD type xs:string.
    std::string*                         arg2                           0;	///< Optional element.
/// Element "arg3" of XSD type xs:string.
    std::string*                         arg3                           0;	///< Optional element.
/// Element "arg4" of XSD type xs:string.
    std::string*                         arg4                           0;	///< Optional element.
/// Element "arg5" of XSD type xs:string.
    std::string*                         arg5                           0;	///< Optional element.
/// Element "arg6" of XSD type xs:string.
    std::string*                         arg6                           0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":saveGrainUserResponse is a complexType.
///
/// class web__saveGrainUserResponse operations:
/// - web__saveGrainUserResponse* soap_new_web__saveGrainUserResponse(soap*) allocate and default initialize
/// - web__saveGrainUserResponse* soap_new_web__saveGrainUserResponse(soap*, int num) allocate array and default initialize values
/// - web__saveGrainUserResponse* soap_new_req_web__saveGrainUserResponse(soap*, ...) allocate, set required members
/// - web__saveGrainUserResponse* soap_new_set_web__saveGrainUserResponse(soap*, ...) allocate, set all public members
/// - web__saveGrainUserResponse::soap_default(soap*) default initialize members
/// - int soap_read_web__saveGrainUserResponse(soap*, web__saveGrainUserResponse*) deserialize from a stream
/// - int soap_write_web__saveGrainUserResponse(soap*, web__saveGrainUserResponse*) serialize to a stream
/// - web__saveGrainUserResponse* web__saveGrainUserResponse::soap_dup(soap*) returns deep copy of web__saveGrainUserResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__saveGrainUserResponse::soap_del() deep deletes web__saveGrainUserResponse data members, use only after web__saveGrainUserResponse::soap_dup(NULL) (use soapcpp2 -Ed)
class web__saveGrainUserResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::string*                         return_                        0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":savePoundInfo is a complexType.
///
/// class web__savePoundInfo operations:
/// - web__savePoundInfo* soap_new_web__savePoundInfo(soap*) allocate and default initialize
/// - web__savePoundInfo* soap_new_web__savePoundInfo(soap*, int num) allocate array and default initialize values
/// - web__savePoundInfo* soap_new_req_web__savePoundInfo(soap*, ...) allocate, set required members
/// - web__savePoundInfo* soap_new_set_web__savePoundInfo(soap*, ...) allocate, set all public members
/// - web__savePoundInfo::soap_default(soap*) default initialize members
/// - int soap_read_web__savePoundInfo(soap*, web__savePoundInfo*) deserialize from a stream
/// - int soap_write_web__savePoundInfo(soap*, web__savePoundInfo*) serialize to a stream
/// - web__savePoundInfo* web__savePoundInfo::soap_dup(soap*) returns deep copy of web__savePoundInfo, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__savePoundInfo::soap_del() deep deletes web__savePoundInfo data members, use only after web__savePoundInfo::soap_dup(NULL) (use soapcpp2 -Ed)
class web__savePoundInfo
{ public:
/// Element "arg0" of XSD type "http://webservice.fy.ggzn.org/":poundInfo.
    web__poundInfo*                      arg0                           0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":poundInfo is a complexType.
///
/// class web__poundInfo operations:
/// - web__poundInfo* soap_new_web__poundInfo(soap*) allocate and default initialize
/// - web__poundInfo* soap_new_web__poundInfo(soap*, int num) allocate array and default initialize values
/// - web__poundInfo* soap_new_req_web__poundInfo(soap*, ...) allocate, set required members
/// - web__poundInfo* soap_new_set_web__poundInfo(soap*, ...) allocate, set all public members
/// - web__poundInfo::soap_default(soap*) default initialize members
/// - int soap_read_web__poundInfo(soap*, web__poundInfo*) deserialize from a stream
/// - int soap_write_web__poundInfo(soap*, web__poundInfo*) serialize to a stream
/// - web__poundInfo* web__poundInfo::soap_dup(soap*) returns deep copy of web__poundInfo, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__poundInfo::soap_del() deep deletes web__poundInfo data members, use only after web__poundInfo::soap_dup(NULL) (use soapcpp2 -Ed)
class web__poundInfo
{ public:
/// Element "ad_client_id" of XSD type xs:int.
    int                                  ad_USCOREclient_USCOREid       1;	///< Required element.
/// Element "ad_org_id" of XSD type xs:int.
    int                                  ad_USCOREorg_USCOREid          1;	///< Required element.
/// Element "ad_role_id" of XSD type xs:int.
    int                                  ad_USCORErole_USCOREid         1;	///< Required element.
/// Element "ad_user_id" of XSD type xs:int.
    int                                  ad_USCOREuser_USCOREid         1;	///< Required element.
/// Element "c_DocTypeTarget_ID" of XSD type xs:string.
    std::string*                         c_USCOREDocTypeTarget_USCOREID 0;	///< Optional element.
/// Element "c_DocType_ID" of XSD type xs:string.
    std::string*                         c_USCOREDocType_USCOREID       0;	///< Optional element.
/// Element "c_PoundInfo_ID" of XSD type xs:int.
    int                                  c_USCOREPoundInfo_USCOREID     1;	///< Required element.
/// Element "c_VehicleInfo_ID" of XSD type xs:int.
    int                                  c_USCOREVehicleInfo_USCOREID   1;	///< Required element.
/// Element "carrierCompany" of XSD type xs:string.
    std::string*                         carrierCompany                 0;	///< Optional element.
/// Element "color" of XSD type xs:string.
    std::string*                         color                          0;	///< Optional element.
/// Element "comments" of XSD type xs:string.
    std::string*                         comments                       0;	///< Optional element.
/// Element "deliverCompany" of XSD type xs:string.
    std::string*                         deliverCompany                 0;	///< Optional element.
/// Element "docAction" of XSD type xs:string.
    std::string*                         docAction                      0;	///< Optional element.
/// Element "docStatus" of XSD type xs:string.
    std::string*                         docStatus                      0;	///< Optional element.
/// Element "documentNo" of XSD type xs:string.
    std::string*                         documentNo                     0;	///< Optional element.
/// Element "grossDate" of XSD type xs:string.
    std::string*                         grossDate                      0;	///< Optional element.
/// Element "grossWeight" of XSD type xs:string.
    std::string*                         grossWeight                    0;	///< Optional element.
/// Element "isApproved" of XSD type xs:string.
    std::string*                         isApproved                     0;	///< Optional element.
/// Element "m_Product_ID" of XSD type xs:string.
    std::string*                         m_USCOREProduct_USCOREID       0;	///< Optional element.
/// Element "packingType" of XSD type xs:string.
    std::string*                         packingType                    0;	///< Optional element.
/// Element "processed" of XSD type xs:string.
    std::string*                         processed                      0;	///< Optional element.
/// Element "processing" of XSD type xs:string.
    std::string*                         processing                     0;	///< Optional element.
/// Element "recipientCompany" of XSD type xs:string.
    std::string*                         recipientCompany               0;	///< Optional element.
/// Element "tareDate" of XSD type xs:string.
    std::string*                         tareDate                       0;	///< Optional element.
/// Element "tareWeight" of XSD type xs:string.
    std::string*                         tareWeight                     0;	///< Optional element.
/// Element "type" of XSD type xs:string.
    std::string*                         type                           0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":savePoundInfoResponse is a complexType.
///
/// class web__savePoundInfoResponse operations:
/// - web__savePoundInfoResponse* soap_new_web__savePoundInfoResponse(soap*) allocate and default initialize
/// - web__savePoundInfoResponse* soap_new_web__savePoundInfoResponse(soap*, int num) allocate array and default initialize values
/// - web__savePoundInfoResponse* soap_new_req_web__savePoundInfoResponse(soap*, ...) allocate, set required members
/// - web__savePoundInfoResponse* soap_new_set_web__savePoundInfoResponse(soap*, ...) allocate, set all public members
/// - web__savePoundInfoResponse::soap_default(soap*) default initialize members
/// - int soap_read_web__savePoundInfoResponse(soap*, web__savePoundInfoResponse*) deserialize from a stream
/// - int soap_write_web__savePoundInfoResponse(soap*, web__savePoundInfoResponse*) serialize to a stream
/// - web__savePoundInfoResponse* web__savePoundInfoResponse::soap_dup(soap*) returns deep copy of web__savePoundInfoResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__savePoundInfoResponse::soap_del() deep deletes web__savePoundInfoResponse data members, use only after web__savePoundInfoResponse::soap_dup(NULL) (use soapcpp2 -Ed)
class web__savePoundInfoResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::string*                         return_                        0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":saveVehicleInfo is a complexType.
///
/// class web__saveVehicleInfo operations:
/// - web__saveVehicleInfo* soap_new_web__saveVehicleInfo(soap*) allocate and default initialize
/// - web__saveVehicleInfo* soap_new_web__saveVehicleInfo(soap*, int num) allocate array and default initialize values
/// - web__saveVehicleInfo* soap_new_req_web__saveVehicleInfo(soap*, ...) allocate, set required members
/// - web__saveVehicleInfo* soap_new_set_web__saveVehicleInfo(soap*, ...) allocate, set all public members
/// - web__saveVehicleInfo::soap_default(soap*) default initialize members
/// - int soap_read_web__saveVehicleInfo(soap*, web__saveVehicleInfo*) deserialize from a stream
/// - int soap_write_web__saveVehicleInfo(soap*, web__saveVehicleInfo*) serialize to a stream
/// - web__saveVehicleInfo* web__saveVehicleInfo::soap_dup(soap*) returns deep copy of web__saveVehicleInfo, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__saveVehicleInfo::soap_del() deep deletes web__saveVehicleInfo data members, use only after web__saveVehicleInfo::soap_dup(NULL) (use soapcpp2 -Ed)
class web__saveVehicleInfo
{ public:
/// Element "arg0" of XSD type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element "arg1" of XSD type xs:string.
    std::string*                         arg1                           0;	///< Optional element.
/// Element "arg2" of XSD type xs:string.
    std::string*                         arg2                           0;	///< Optional element.
/// Element "arg3" of XSD type xs:string.
    std::string*                         arg3                           0;	///< Optional element.
/// Element "arg4" of XSD type xs:string.
    std::string*                         arg4                           0;	///< Optional element.
/// Element "arg5" of XSD type xs:string.
    std::string*                         arg5                           0;	///< Optional element.
/// Element "arg6" of XSD type xs:string.
    std::string*                         arg6                           0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":saveVehicleInfoResponse is a complexType.
///
/// class web__saveVehicleInfoResponse operations:
/// - web__saveVehicleInfoResponse* soap_new_web__saveVehicleInfoResponse(soap*) allocate and default initialize
/// - web__saveVehicleInfoResponse* soap_new_web__saveVehicleInfoResponse(soap*, int num) allocate array and default initialize values
/// - web__saveVehicleInfoResponse* soap_new_req_web__saveVehicleInfoResponse(soap*, ...) allocate, set required members
/// - web__saveVehicleInfoResponse* soap_new_set_web__saveVehicleInfoResponse(soap*, ...) allocate, set all public members
/// - web__saveVehicleInfoResponse::soap_default(soap*) default initialize members
/// - int soap_read_web__saveVehicleInfoResponse(soap*, web__saveVehicleInfoResponse*) deserialize from a stream
/// - int soap_write_web__saveVehicleInfoResponse(soap*, web__saveVehicleInfoResponse*) serialize to a stream
/// - web__saveVehicleInfoResponse* web__saveVehicleInfoResponse::soap_dup(soap*) returns deep copy of web__saveVehicleInfoResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__saveVehicleInfoResponse::soap_del() deep deletes web__saveVehicleInfoResponse data members, use only after web__saveVehicleInfoResponse::soap_dup(NULL) (use soapcpp2 -Ed)
class web__saveVehicleInfoResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::string*                         return_                        0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":login is a complexType.
///
/// class web__login operations:
/// - web__login* soap_new_web__login(soap*) allocate and default initialize
/// - web__login* soap_new_web__login(soap*, int num) allocate array and default initialize values
/// - web__login* soap_new_req_web__login(soap*, ...) allocate, set required members
/// - web__login* soap_new_set_web__login(soap*, ...) allocate, set all public members
/// - web__login::soap_default(soap*) default initialize members
/// - int soap_read_web__login(soap*, web__login*) deserialize from a stream
/// - int soap_write_web__login(soap*, web__login*) serialize to a stream
/// - web__login* web__login::soap_dup(soap*) returns deep copy of web__login, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__login::soap_del() deep deletes web__login data members, use only after web__login::soap_dup(NULL) (use soapcpp2 -Ed)
class web__login
{ public:
/// Element "arg0" of XSD type xs:string.
    std::string*                         arg0                           0;	///< Optional element.
/// Element "arg1" of XSD type xs:string.
    std::string*                         arg1                           0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":loginResponse is a complexType.
///
/// class web__loginResponse operations:
/// - web__loginResponse* soap_new_web__loginResponse(soap*) allocate and default initialize
/// - web__loginResponse* soap_new_web__loginResponse(soap*, int num) allocate array and default initialize values
/// - web__loginResponse* soap_new_req_web__loginResponse(soap*, ...) allocate, set required members
/// - web__loginResponse* soap_new_set_web__loginResponse(soap*, ...) allocate, set all public members
/// - web__loginResponse::soap_default(soap*) default initialize members
/// - int soap_read_web__loginResponse(soap*, web__loginResponse*) deserialize from a stream
/// - int soap_write_web__loginResponse(soap*, web__loginResponse*) serialize to a stream
/// - web__loginResponse* web__loginResponse::soap_dup(soap*) returns deep copy of web__loginResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__loginResponse::soap_del() deep deletes web__loginResponse data members, use only after web__loginResponse::soap_dup(NULL) (use soapcpp2 -Ed)
class web__loginResponse
{ public:
/// Element "return" of XSD type "http://webservice.fy.ggzn.org/":user.
    web__user*                           return_                        0;	///< Optional element.
    struct soap                         *soap                          ;
};

/// @brief "http://webservice.fy.ggzn.org/":user is a complexType.
///
/// class web__user operations:
/// - web__user* soap_new_web__user(soap*) allocate and default initialize
/// - web__user* soap_new_web__user(soap*, int num) allocate array and default initialize values
/// - web__user* soap_new_req_web__user(soap*, ...) allocate, set required members
/// - web__user* soap_new_set_web__user(soap*, ...) allocate, set all public members
/// - web__user::soap_default(soap*) default initialize members
/// - int soap_read_web__user(soap*, web__user*) deserialize from a stream
/// - int soap_write_web__user(soap*, web__user*) serialize to a stream
/// - web__user* web__user::soap_dup(soap*) returns deep copy of web__user, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - web__user::soap_del() deep deletes web__user data members, use only after web__user::soap_dup(NULL) (use soapcpp2 -Ed)
class web__user
{ public:
/// Element "AD_Client_ID" of XSD type xs:int.
    int                                  AD_USCOREClient_USCOREID       1;	///< Required element.
/// Element "AD_Org_ID" of XSD type xs:int.
    int                                  AD_USCOREOrg_USCOREID          1;	///< Required element.
/// Element "AD_ROLE_ID" of XSD type xs:int.
    int                                  AD_USCOREROLE_USCOREID         1;	///< Required element.
/// Element "AD_USER_ID" of XSD type xs:int.
    int                                  AD_USCOREUSER_USCOREID         1;	///< Required element.
/// Element "MESSAGE" of XSD type xs:string.
    std::string*                         MESSAGE                        0;	///< Optional element.
/// Element "NAME" of XSD type xs:string.
    std::string*                         NAME                           0;	///< Optional element.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://webservice.fy.ggzn.org/                                           *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":CheckingInfo of XSD type "http://webservice.fy.ggzn.org/":checkingInfo.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":GPOrders of XSD type "http://webservice.fy.ggzn.org/":gpOrders.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":PoundInfo of XSD type "http://webservice.fy.ggzn.org/":poundInfo.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":User of XSD type "http://webservice.fy.ggzn.org/":user.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":login of XSD type "http://webservice.fy.ggzn.org/":login.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":loginResponse of XSD type "http://webservice.fy.ggzn.org/":loginResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":saveCheckingInfo of XSD type "http://webservice.fy.ggzn.org/":saveCheckingInfo.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":saveCheckingInfoResponse of XSD type "http://webservice.fy.ggzn.org/":saveCheckingInfoResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":saveGPOrders of XSD type "http://webservice.fy.ggzn.org/":saveGPOrders.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":saveGPOrdersResponse of XSD type "http://webservice.fy.ggzn.org/":saveGPOrdersResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":saveGrainUser of XSD type "http://webservice.fy.ggzn.org/":saveGrainUser.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":saveGrainUserResponse of XSD type "http://webservice.fy.ggzn.org/":saveGrainUserResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":savePoundInfo of XSD type "http://webservice.fy.ggzn.org/":savePoundInfo.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":savePoundInfoA of XSD type "http://webservice.fy.ggzn.org/":savePoundInfoA.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":savePoundInfoAResponse of XSD type "http://webservice.fy.ggzn.org/":savePoundInfoAResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":savePoundInfoResponse of XSD type "http://webservice.fy.ggzn.org/":savePoundInfoResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":saveSamplers of XSD type "http://webservice.fy.ggzn.org/":saveSamplers.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":saveSamplersResponse of XSD type "http://webservice.fy.ggzn.org/":saveSamplersResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":saveVehicleInfo of XSD type "http://webservice.fy.ggzn.org/":saveVehicleInfo.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://webservice.fy.ggzn.org/":saveVehicleInfoResponse of XSD type "http://webservice.fy.ggzn.org/":saveVehicleInfoResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://webservice.fy.ggzn.org/                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap web  service name:	FYServiceImplPortBinding 
//gsoap web  service type:	FYService 
//gsoap web  service port:	http://192.168.188.242:8080/fYService 
//gsoap web  service namespace:	http://webservice.fy.ggzn.org/ 
//gsoap web  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage fYService Definitions

@section fYService_bindings Service Bindings

  - @ref FYServiceImplPortBinding

@section fYService_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page FYServiceImplPortBinding Binding "FYServiceImplPortBinding"

@section FYServiceImplPortBinding_operations Operations of Binding "FYServiceImplPortBinding"

  - @ref __web__saveGPOrders

  - @ref __web__savePoundInfoA

  - @ref __web__saveVehicleInfo

  - @ref __web__saveGrainUser

  - @ref __web__saveCheckingInfo

  - @ref __web__saveSamplers

  - @ref __web__savePoundInfo

  - @ref __web__login

@section FYServiceImplPortBinding_ports Default endpoints of Binding "FYServiceImplPortBinding"

  - http://192.168.188.242:8080/fYService


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   FYServiceImplPortBinding                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __web__saveGPOrders                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__web__saveGPOrders" of service binding "FYServiceImplPortBinding".

  - SOAP document/literal style messaging

  - Default endpoints:
    - http://192.168.188.242:8080/fYService

  - Addressing input action: "http://webservice.fy.ggzn.org/FYService/saveGPOrdersRequest"

  - Addressing output action: "http://webservice.fy.ggzn.org/FYService/saveGPOrdersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___web__saveGPOrders(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    web__saveGPOrders*                  web__saveGPOrders_,
    // output parameters:
    web__saveGPOrdersResponse          &web__saveGPOrdersResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __web__saveGPOrders(
    struct soap *soap,
    // input parameters:
    web__saveGPOrders*                  web__saveGPOrders_,
    // output parameters:
    web__saveGPOrdersResponse          &web__saveGPOrdersResponse_
  );
@endcode

C++ proxy class (defined in soapFYServiceImplPortBindingProxy.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapFYServiceImplPortBindingService.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap web  service method-protocol:	saveGPOrders SOAP
//gsoap web  service method-style:	saveGPOrders document
//gsoap web  service method-encoding:	saveGPOrders literal
//gsoap web  service method-input-action:	saveGPOrders http://webservice.fy.ggzn.org/FYService/saveGPOrdersRequest
//gsoap web  service method-output-action:	saveGPOrders http://webservice.fy.ggzn.org/FYService/saveGPOrdersResponse
int __web__saveGPOrders(
    web__saveGPOrders*                  web__saveGPOrders_,	///< Input parameter
    web__saveGPOrdersResponse          &web__saveGPOrdersResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __web__savePoundInfoA                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__web__savePoundInfoA" of service binding "FYServiceImplPortBinding".

  - SOAP document/literal style messaging

  - Default endpoints:
    - http://192.168.188.242:8080/fYService

  - Addressing input action: "http://webservice.fy.ggzn.org/FYService/savePoundInfoARequest"

  - Addressing output action: "http://webservice.fy.ggzn.org/FYService/savePoundInfoAResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___web__savePoundInfoA(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    web__savePoundInfoA*                web__savePoundInfoA_,
    // output parameters:
    web__savePoundInfoAResponse        &web__savePoundInfoAResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __web__savePoundInfoA(
    struct soap *soap,
    // input parameters:
    web__savePoundInfoA*                web__savePoundInfoA_,
    // output parameters:
    web__savePoundInfoAResponse        &web__savePoundInfoAResponse_
  );
@endcode

C++ proxy class (defined in soapFYServiceImplPortBindingProxy.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapFYServiceImplPortBindingService.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap web  service method-protocol:	savePoundInfoA SOAP
//gsoap web  service method-style:	savePoundInfoA document
//gsoap web  service method-encoding:	savePoundInfoA literal
//gsoap web  service method-input-action:	savePoundInfoA http://webservice.fy.ggzn.org/FYService/savePoundInfoARequest
//gsoap web  service method-output-action:	savePoundInfoA http://webservice.fy.ggzn.org/FYService/savePoundInfoAResponse
int __web__savePoundInfoA(
    web__savePoundInfoA*                web__savePoundInfoA_,	///< Input parameter
    web__savePoundInfoAResponse        &web__savePoundInfoAResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __web__saveVehicleInfo                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__web__saveVehicleInfo" of service binding "FYServiceImplPortBinding".

  - SOAP document/literal style messaging

  - Default endpoints:
    - http://192.168.188.242:8080/fYService

  - Addressing input action: "http://webservice.fy.ggzn.org/FYService/saveVehicleInfoRequest"

  - Addressing output action: "http://webservice.fy.ggzn.org/FYService/saveVehicleInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___web__saveVehicleInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    web__saveVehicleInfo*               web__saveVehicleInfo_,
    // output parameters:
    web__saveVehicleInfoResponse       &web__saveVehicleInfoResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __web__saveVehicleInfo(
    struct soap *soap,
    // input parameters:
    web__saveVehicleInfo*               web__saveVehicleInfo_,
    // output parameters:
    web__saveVehicleInfoResponse       &web__saveVehicleInfoResponse_
  );
@endcode

C++ proxy class (defined in soapFYServiceImplPortBindingProxy.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapFYServiceImplPortBindingService.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap web  service method-protocol:	saveVehicleInfo SOAP
//gsoap web  service method-style:	saveVehicleInfo document
//gsoap web  service method-encoding:	saveVehicleInfo literal
//gsoap web  service method-input-action:	saveVehicleInfo http://webservice.fy.ggzn.org/FYService/saveVehicleInfoRequest
//gsoap web  service method-output-action:	saveVehicleInfo http://webservice.fy.ggzn.org/FYService/saveVehicleInfoResponse
int __web__saveVehicleInfo(
    web__saveVehicleInfo*               web__saveVehicleInfo_,	///< Input parameter
    web__saveVehicleInfoResponse       &web__saveVehicleInfoResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __web__saveGrainUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__web__saveGrainUser" of service binding "FYServiceImplPortBinding".

  - SOAP document/literal style messaging

  - Default endpoints:
    - http://192.168.188.242:8080/fYService

  - Addressing input action: "http://webservice.fy.ggzn.org/FYService/saveGrainUserRequest"

  - Addressing output action: "http://webservice.fy.ggzn.org/FYService/saveGrainUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___web__saveGrainUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    web__saveGrainUser*                 web__saveGrainUser_,
    // output parameters:
    web__saveGrainUserResponse         &web__saveGrainUserResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __web__saveGrainUser(
    struct soap *soap,
    // input parameters:
    web__saveGrainUser*                 web__saveGrainUser_,
    // output parameters:
    web__saveGrainUserResponse         &web__saveGrainUserResponse_
  );
@endcode

C++ proxy class (defined in soapFYServiceImplPortBindingProxy.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapFYServiceImplPortBindingService.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap web  service method-protocol:	saveGrainUser SOAP
//gsoap web  service method-style:	saveGrainUser document
//gsoap web  service method-encoding:	saveGrainUser literal
//gsoap web  service method-input-action:	saveGrainUser http://webservice.fy.ggzn.org/FYService/saveGrainUserRequest
//gsoap web  service method-output-action:	saveGrainUser http://webservice.fy.ggzn.org/FYService/saveGrainUserResponse
int __web__saveGrainUser(
    web__saveGrainUser*                 web__saveGrainUser_,	///< Input parameter
    web__saveGrainUserResponse         &web__saveGrainUserResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __web__saveCheckingInfo                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__web__saveCheckingInfo" of service binding "FYServiceImplPortBinding".

  - SOAP document/literal style messaging

  - Default endpoints:
    - http://192.168.188.242:8080/fYService

  - Addressing input action: "http://webservice.fy.ggzn.org/FYService/saveCheckingInfoRequest"

  - Addressing output action: "http://webservice.fy.ggzn.org/FYService/saveCheckingInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___web__saveCheckingInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    web__saveCheckingInfo*              web__saveCheckingInfo_,
    // output parameters:
    web__saveCheckingInfoResponse      &web__saveCheckingInfoResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __web__saveCheckingInfo(
    struct soap *soap,
    // input parameters:
    web__saveCheckingInfo*              web__saveCheckingInfo_,
    // output parameters:
    web__saveCheckingInfoResponse      &web__saveCheckingInfoResponse_
  );
@endcode

C++ proxy class (defined in soapFYServiceImplPortBindingProxy.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapFYServiceImplPortBindingService.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap web  service method-protocol:	saveCheckingInfo SOAP
//gsoap web  service method-style:	saveCheckingInfo document
//gsoap web  service method-encoding:	saveCheckingInfo literal
//gsoap web  service method-input-action:	saveCheckingInfo http://webservice.fy.ggzn.org/FYService/saveCheckingInfoRequest
//gsoap web  service method-output-action:	saveCheckingInfo http://webservice.fy.ggzn.org/FYService/saveCheckingInfoResponse
int __web__saveCheckingInfo(
    web__saveCheckingInfo*              web__saveCheckingInfo_,	///< Input parameter
    web__saveCheckingInfoResponse      &web__saveCheckingInfoResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __web__saveSamplers                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__web__saveSamplers" of service binding "FYServiceImplPortBinding".

  - SOAP document/literal style messaging

  - Default endpoints:
    - http://192.168.188.242:8080/fYService

  - Addressing input action: "http://webservice.fy.ggzn.org/FYService/saveSamplersRequest"

  - Addressing output action: "http://webservice.fy.ggzn.org/FYService/saveSamplersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___web__saveSamplers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    web__saveSamplers*                  web__saveSamplers_,
    // output parameters:
    web__saveSamplersResponse          &web__saveSamplersResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __web__saveSamplers(
    struct soap *soap,
    // input parameters:
    web__saveSamplers*                  web__saveSamplers_,
    // output parameters:
    web__saveSamplersResponse          &web__saveSamplersResponse_
  );
@endcode

C++ proxy class (defined in soapFYServiceImplPortBindingProxy.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapFYServiceImplPortBindingService.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap web  service method-protocol:	saveSamplers SOAP
//gsoap web  service method-style:	saveSamplers document
//gsoap web  service method-encoding:	saveSamplers literal
//gsoap web  service method-input-action:	saveSamplers http://webservice.fy.ggzn.org/FYService/saveSamplersRequest
//gsoap web  service method-output-action:	saveSamplers http://webservice.fy.ggzn.org/FYService/saveSamplersResponse
int __web__saveSamplers(
    web__saveSamplers*                  web__saveSamplers_,	///< Input parameter
    web__saveSamplersResponse          &web__saveSamplersResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __web__savePoundInfo                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__web__savePoundInfo" of service binding "FYServiceImplPortBinding".

  - SOAP document/literal style messaging

  - Default endpoints:
    - http://192.168.188.242:8080/fYService

  - Addressing input action: "http://webservice.fy.ggzn.org/FYService/savePoundInfoRequest"

  - Addressing output action: "http://webservice.fy.ggzn.org/FYService/savePoundInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___web__savePoundInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    web__savePoundInfo*                 web__savePoundInfo_,
    // output parameters:
    web__savePoundInfoResponse         &web__savePoundInfoResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __web__savePoundInfo(
    struct soap *soap,
    // input parameters:
    web__savePoundInfo*                 web__savePoundInfo_,
    // output parameters:
    web__savePoundInfoResponse         &web__savePoundInfoResponse_
  );
@endcode

C++ proxy class (defined in soapFYServiceImplPortBindingProxy.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapFYServiceImplPortBindingService.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap web  service method-protocol:	savePoundInfo SOAP
//gsoap web  service method-style:	savePoundInfo document
//gsoap web  service method-encoding:	savePoundInfo literal
//gsoap web  service method-input-action:	savePoundInfo http://webservice.fy.ggzn.org/FYService/savePoundInfoRequest
//gsoap web  service method-output-action:	savePoundInfo http://webservice.fy.ggzn.org/FYService/savePoundInfoResponse
int __web__savePoundInfo(
    web__savePoundInfo*                 web__savePoundInfo_,	///< Input parameter
    web__savePoundInfoResponse         &web__savePoundInfoResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __web__login                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__web__login" of service binding "FYServiceImplPortBinding".

  - SOAP document/literal style messaging

  - Default endpoints:
    - http://192.168.188.242:8080/fYService

  - Addressing input action: "http://webservice.fy.ggzn.org/FYService/loginRequest"

  - Addressing output action: "http://webservice.fy.ggzn.org/FYService/loginResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___web__login(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    web__login*                         web__login_,
    // output parameters:
    web__loginResponse                 &web__loginResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __web__login(
    struct soap *soap,
    // input parameters:
    web__login*                         web__login_,
    // output parameters:
    web__loginResponse                 &web__loginResponse_
  );
@endcode

C++ proxy class (defined in soapFYServiceImplPortBindingProxy.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapFYServiceImplPortBindingService.h generated with soapcpp2):
@code
  class FYServiceImplPortBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap web  service method-protocol:	login SOAP
//gsoap web  service method-style:	login document
//gsoap web  service method-encoding:	login literal
//gsoap web  service method-input-action:	login http://webservice.fy.ggzn.org/FYService/loginRequest
//gsoap web  service method-output-action:	login http://webservice.fy.ggzn.org/FYService/loginResponse
int __web__login(
    web__login*                         web__login_,	///< Input parameter
    web__loginResponse                 &web__loginResponse_	///< Output parameter
);

/**

@page FYServiceImplPortBinding Binding "FYServiceImplPortBinding"

@section FYServiceImplPortBinding_policy_enablers Policy Enablers of Binding "FYServiceImplPortBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section  Top-level root elements of schema ""

@section web Top-level root elements of schema "http://webservice.fy.ggzn.org/"

  - <web:CheckingInfo> (use wsdl2h option -g to auto-generate type _web__CheckingInfo)

  - <web:GPOrders> (use wsdl2h option -g to auto-generate type _web__GPOrders)

  - <web:PoundInfo> (use wsdl2h option -g to auto-generate type _web__PoundInfo)

  - <web:User> (use wsdl2h option -g to auto-generate type _web__User)

  - <web:login> (use wsdl2h option -g to auto-generate type _web__login)

  - <web:loginResponse> (use wsdl2h option -g to auto-generate type _web__loginResponse)

  - <web:saveCheckingInfo> (use wsdl2h option -g to auto-generate type _web__saveCheckingInfo)

  - <web:saveCheckingInfoResponse> (use wsdl2h option -g to auto-generate type _web__saveCheckingInfoResponse)

  - <web:saveGPOrders> (use wsdl2h option -g to auto-generate type _web__saveGPOrders)

  - <web:saveGPOrdersResponse> (use wsdl2h option -g to auto-generate type _web__saveGPOrdersResponse)

  - <web:saveGrainUser> (use wsdl2h option -g to auto-generate type _web__saveGrainUser)

  - <web:saveGrainUserResponse> (use wsdl2h option -g to auto-generate type _web__saveGrainUserResponse)

  - <web:savePoundInfo> (use wsdl2h option -g to auto-generate type _web__savePoundInfo)

  - <web:savePoundInfoA> (use wsdl2h option -g to auto-generate type _web__savePoundInfoA)

  - <web:savePoundInfoAResponse> (use wsdl2h option -g to auto-generate type _web__savePoundInfoAResponse)

  - <web:savePoundInfoResponse> (use wsdl2h option -g to auto-generate type _web__savePoundInfoResponse)

  - <web:saveSamplers> (use wsdl2h option -g to auto-generate type _web__saveSamplers)

  - <web:saveSamplersResponse> (use wsdl2h option -g to auto-generate type _web__saveSamplersResponse)

  - <web:saveVehicleInfo> (use wsdl2h option -g to auto-generate type _web__saveVehicleInfo)

  - <web:saveVehicleInfoResponse> (use wsdl2h option -g to auto-generate type _web__saveVehicleInfoResponse)

*/

/* End of mySoap.h */
